1.blog 登录权限检查(中间件实现) √
1.1 获取页面登录检查，未登录转至登陆界面
1.2 API类登录检查，未登录返回未登录提示

2.社交
2.1 文章关注 √
2.2 用户关注 √

3.blog统计  使用缓存
3.1 阅读数
使用cookie储存被访问id，并设置限制期限。限定时间内首次访问，阅读数加一。 
3.2 点赞
 redis
 blog_article_praise_list 集合存放所接受的article_id
 blog_article_member_praise_{article_id} 集合存该文章下点赞用户id
 blog_article_praise_counts_{article_id} 保存点赞数
实现思路：
1.使用 supervisor 或者 自定义的cron 脚本，自动执行think队列。执行队列后，当新任务push进队列后自动执行。
2.点赞逻辑：
(1) 用户点赞后，用户ID和文章ID发送至点赞函数 blog\article\addPraise,该函数执行以下流程：
a.初始化一些缓存，
b.建立点赞缓存article_praise_{u_id}_{a_id}；检测是否已建立，已建立返回；
c.建立文章点赞数量缓存 article_praise_counts_{a_id};已建立则+1,未建立则查询数据库建立
d.redis中建立文章列表article_list；文章id入该集合；
e.检测缓存中是否有article_praise_update,若未过期则推送消息至articlePraiseUpdate队列；
（2）返回点赞执行结果：
a.一段时间内重复点赞 return 2;
b.否则返回点赞数量，数量为当前article_praise_counts_{a_id}+数据库返回数量；
3.articlePraiseUpdate队列逻辑
a.从article_list中左pop一个文章id
b.根据文章id进行数据库更新

4.搜索
4.1 条件搜索

  
